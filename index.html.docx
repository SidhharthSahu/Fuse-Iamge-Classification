from flask import Flask, render_template, request 
from keras.models import load_model
from keras.preprocessing import image

app= Flask(__name__)

dic={0 : 'NG',1:'OK'}

model=load_model('model.h5')

model.make_predict_function

def predict_label(img_path):
    i=image.load_img(img_path, target_size=(350,350))
    i=image.img_to_array(i)/255.0
    i=i.reshape(1,350,350,3)
    p=model.predict_classes(i)
    return dic[p[0]]

#routes
@app.route('/',methods=['GET','POST'])
def main():
    return render_template('index.html')

@app.route('/about')
def about_page():
    return ('You are given a fuse box with 9 fuses. In the fuse box, there is an OK position (already given) and other positions are Not Good (NG). You have to make a solution for the given problem where you can predict the result (OK or NG) based on an image uploaded by the user.')

@app.route('/submit',methods=['GET','POST'])
def get_result():
    if request.method=='POST':
        img = request.files['my_image']
        
        img_path= 'static/' + img.filename
        img.save(img_path)
        
        p = predict_label(img_path)
    return render_template('index.html', prediction = p,img_path=img_path)

if __name__ == '__main__':
    #app debug
    app.run(debug=True)